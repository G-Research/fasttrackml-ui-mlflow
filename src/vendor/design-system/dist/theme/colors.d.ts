declare const lightColors: {
    brown: string;
    coral: string;
    charcoal: string;
    indigo: string;
    lemon: string;
    lime: string;
    pink: string;
    purple: string;
    teal: string;
    turquoise: string;
    blue100: string;
    blue200: string;
    blue300: string;
    blue400: string;
    blue500: string;
    blue600: string;
    blue700: string;
    blue800: string;
    green100: string;
    green200: string;
    green300: string;
    green400: string;
    green500: string;
    green600: string;
    green700: string;
    green800: string;
    grey100: string;
    grey200: string;
    grey300: string;
    grey400: string;
    grey500: string;
    grey600: string;
    grey700: string;
    grey800: string;
    red100: string;
    red200: string;
    red300: string;
    red400: string;
    red500: string;
    red600: string;
    red700: string;
    red800: string;
    yellow100: string;
    yellow200: string;
    yellow300: string;
    yellow400: string;
    yellow500: string;
    yellow600: string;
    yellow700: string;
    yellow800: string;
    primary: string;
    white: string;
    backgroundPrimary: string;
    actionDangerPrimaryBackgroundDefault: string;
    actionDangerPrimaryBackgroundHover: string;
    actionDangerPrimaryBackgroundPress: string;
    actionDangerDefaultBackgroundDefault: string;
    actionDangerDefaultBackgroundHover: string;
    actionDangerDefaultBackgroundPress: string;
    actionDangerDefaultBorderDefault: string;
    actionDangerDefaultBorderHover: string;
    actionDangerDefaultBorderPress: string;
    actionDangerDefaultTextDefault: string;
    actionDangerDefaultTextHover: string;
    actionDangerDefaultTextPress: string;
    actionDefaultBackgroundDefault: string;
    actionDefaultBackgroundHover: string;
    actionDefaultBackgroundPress: string;
    actionDefaultBorderDefault: string;
    actionDefaultBorderFocus: string;
    actionDefaultBorderHover: string;
    actionDefaultBorderPress: string;
    actionDefaultTextDefault: string;
    actionDefaultTextHover: string;
    actionDefaultTextPress: string;
    actionDisabledBackground: string;
    actionDisabledText: string;
    actionPrimaryBackgroundDefault: string;
    actionPrimaryBackgroundHover: string;
    actionPrimaryBackgroundPress: string;
    actionPrimaryTextDefault: string;
    actionPrimaryTextHover: string;
    actionPrimaryTextPress: string;
    actionTertiaryBackgroundDefault: string;
    actionTertiaryBackgroundHover: string;
    actionTertiaryBackgroundPress: string;
    actionTertiaryTextDefault: string;
    actionTertiaryTextHover: string;
    actionTertiaryTextPress: string;
    backgroundDanger: string;
    backgroundSecondary: string;
    backgroundWarning: string;
    backgroundValidationDanger: string;
    backgroundValidationSuccess: string;
    backgroundValidationWarning: string;
    border: string;
    borderDecorative: string;
    borderValidationDanger: string;
    borderValidationWarning: string;
    textPrimary: string;
    textSecondary: string;
    textPlaceholder: string;
    textValidationDanger: string;
    textValidationSuccess: string;
    textValidationWarning: string;
    textValidationInfo: string;
    overlayOverlay: string;
    tagDefault: string;
    tagBrown: string;
    tagCoral: string;
    tagCharcoal: string;
    tagIndigo: string;
    tagLemon: string;
    tagLime: string;
    tagPink: string;
    tagPurple: string;
    tagTeal: string;
    tagTurquoise: string;
    tagText: string;
    tagHover: string;
    tagPress: string;
    tagIconHover: string;
    tagIconPress: string;
    typographyCodeBg: string;
    tableRowHover: string;
    tooltipBackgroundTooltip: string;
};
type DesignSystemColors = typeof lightColors;
export interface AntdColors {
    bodyBackground: string;
    textColor: string;
    textColorSecondary: string;
    primaryColor: string;
    infoColor: string;
    errorColor: string;
    successColor: string;
    warningColor: string;
    borderColorBase: string;
    alertErrorTextColor: string;
    alertErrorBgColor: string;
    alertErrorIconColor: string;
    alertErrorBorderColor: string;
    alertInfoBgColor: string;
    alertInfoIconColor: string;
    alertInfoTextColor: string;
    alertInfoBorderColor: string;
    alertWarningTextColor: string;
    alertWarningBorderColor: string;
    alertWarningBgColor: string;
    alertWarningIconColor: string;
    alertTextColor: string;
    alertMessageColor: string;
    spinDotDefault: string;
}
export declare function getAntdColors(isDarkMode: boolean): AntdColors;
declare const deprecatedColors: {
    radioInteractiveAvailable: string;
    radioInteractiveHover: string;
    radioInteractivePress: string;
    radioDisabled: string;
    radioDefaultBorder: string;
    radioDefaultBackground: string;
    radioInteractiveHoverSecondary: string;
    radioInteractivePressSecondary: string;
};
export declare function getColors(isDarkMode: boolean): typeof deprecatedColors & DesignSystemColors;
export {};
//# sourceMappingURL=colors.d.ts.map